{"ast":null,"code":"var _jsxFileName = \"D:\\\\react js\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      setAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      setAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(About, {\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","TextForm","Alert","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/react js/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert]=useState(null);\n  const showAlert =(message, type)=>{\n     setAlert({\n      msg:message,\n      type:type\n     })\n  }    \n  const toggleMode =()=>{\n    if(mode=== 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor ='#042743';\n      setAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor ='white';\n      setAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n  return (\n  <>\n<Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n{/* <Navbar/> */}\n<Alert alert = {alert}/>\n<div className=\"container my-3\">\n <TextForm heading=\"Enter the text to analyze below\" mode={mode} />\n {/* <About/> */}\n <About mode={mode} />\n  \n</div>\n  </>\n  );\n  }\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,SAAS,GAAEA,CAACC,OAAO,EAAEC,IAAI,KAAG;IAC/BH,QAAQ,CAAC;MACRI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACN,CAAC,CAAC;EACL,CAAC;EACD,MAAME,UAAU,GAAEA,CAAA,KAAI;IACpB,IAAGR,IAAI,KAAI,OAAO,EAAC;MACjBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAE,SAAS;MAC9CT,QAAQ,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACnD,CAAC,MACG;MACFF,OAAO,CAAE,OAAO,CAAC;MACjBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAE,OAAO;MAC5CT,QAAQ,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACpD;EACF,CAAC;EACD,oBACAR,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACFlB,OAAA,CAACN,MAAM;MAACyB,KAAK,EAAC,WAAW;MAACC,SAAS,EAAC,iBAAiB;MAACf,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5FxB,OAAA,CAACJ,KAAK;MAACW,KAAK,EAAIA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxBxB,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAP,QAAA,gBAC9BlB,OAAA,CAACL,QAAQ;QAAC+B,OAAO,EAAC,iCAAiC;QAACrB,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAElExB,OAAA,CAACP,KAAK;QAACY,IAAI,EAAEA;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CAAC;EAAA,eACF,CAAC;AAEH;AAACpB,EAAA,CAlCMD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}